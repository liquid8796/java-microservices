services:
  mysql:
    image: mysql:8
    hostname: mysqlserver
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: banking
      MYSQL_USER: user
      MYSQL_PASSWORD: dummypassword
      MYSQL_ROOT_PASSWORD: dummypassword
    volumes:
      - ../db-init/mysql/schema.sql:/docker-entrypoint-initdb.d/1.sql
      - ../db-init/mysql/data.sql:/docker-entrypoint-initdb.d/2.sql
    extends:
      file: common-config.yml
      service: network-deploy-service
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "--silent" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  rabbit:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
#    command: rabbitmq-server
    expose:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
    extends:
      file: common-config.yml
      service: network-deploy-service

  configserver:
    image: liquid8796/configserver:s6
    container_name: configserver-ms
    ports:
      - "8071:8071"
    depends_on:
      rabbit:
        condition: service_healthy
      mysql:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-base-config

  accounts:
    image: eazybytes/accounts:s6
    container_name: accounts-ms
    ports:
      - "8080:8080"
    depends_on:
      configserver:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-configserver-config

  loans:
    image: liquid8796/loans:s6
    container_name: loans-ms
    ports:
      - "8090:8090"
    depends_on:
      configserver:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-configserver-config

  cards:
    image: liquid8796/cards:s6
    container_name: cards-ms
    ports:
      - "9000:9000"
    depends_on:
      configserver:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-configserver-config

networks:
  jarvis:
    driver: "bridge"